<?php

// Generate JavaScript test code

function genarate_javascript()
{
    global $microlang_test_count;

    $js = "// THIS CODE IS AUTOGENERATED WHEN THE PHP TEST SUITE IS RUN\n\nmicrolang_test_number = 1;\nmicrolang_test_count = $microlang_test_count;\n\n\n";
    $php = file_get_contents( SCRP_PATH );
    $php = explode( "// Test", $php );
    array_shift( $php );
    $i = 1;
    foreach( $php as $lines )
    {
        $js .= "microlang_tests[$i] = function()\n{\n    var success;\n\n    code = \"\";\n\n";

        $lines = explode( "\n", $lines );
        foreach( $lines as $line )
        {
            if( $line === 'do_assert( @$output === [] );' )
            {
                $js .= "    var p,pc = 0;\n";
                $js .= "    for( p in output ) if( output.hasOwnProperty( p ) ) pc++;\n";
                $js .= "    success = assert( pc === 0, '(no data)' );\n";
                continue;
            }

            if( substr( $line, 0, 6 ) === '$input' )
            {
                $line = str_replace( '$input', '    input', $line );
                $line = str_replace( ' = [', ' = {', $line );
                $line = str_replace( ' = [', ' = {', $line );
                $line = str_replace( "];", "};", $line );
                $line = str_replace( " => ", ": ", $line );
                $js .= "$line\n\n";
                continue;
            }

            if( substr( $line, 0, 5 ) === '$code' )
            {
                $line = str_replace( '$code', '    code', $line );
                $line = str_replace( '.=', '+=', $line );
                $line .= "\n";
                $js .= $line;
                continue;
            }

            if( substr( $line, 0, 16 ) === 'require $execute' )
            {
                $js .= "\n    execute();\n\n";
                continue;
            }

            if( substr( $line, 0, 7 ) === 'require' )
            {
                continue;
            }

            if( trim( $line ) === '' )
            {
                continue;
            }

            if( substr( $line, 0, 2 ) === '//' )
            {
                continue;
            }

            if( $line === 'do_assert();' )
            {
                $js .= "    success = assert();\n";
            }

            if( substr( $line, 0, 10 ) === 'do_assert(')
            {
                $assertion = $line;

                $line = "    $line";
                $line = str_replace( 'do_assert(', 'success = assert(', $line );
                $line = str_replace( '@$', "output['", $line );
                $line = str_replace( ' ===', "'] ===", $line );

                $assertion = str_replace( 'do_assert( ', '', $assertion );
                $assertion = str_replace( 'do_assert( ', '', $assertion );
                $assertion = str_replace( ' );', '', $assertion );
                $assertion = str_replace( '@$', '', $assertion );
                $assertion = str_replace( '===', '=', $assertion );
                $assertion = str_replace( ' && ', ', ', $assertion );
                $assertion = str_replace( "'", "\\'", $assertion );
                $assertion = str_replace( "= \\'", "= \"", $assertion );
                $assertion = str_replace( "\\', ", "\", ", $assertion );
                $assertion = str_replace( "\\'' );", "\" );", $assertion );
                $assertion = "'$assertion'";

                $line = str_replace( ' );', ", $assertion );", $line );
                $line = str_replace( "\\'' );", "\"' );", $line );

                $js .= "$line\n";
            }
        }

        $js .= "\n    return success;\n};\n\n\n";
        $i++;
    }

    file_put_contents( ROOT_PATH . '/../js/autogenerated/tests.js', $js );
}


